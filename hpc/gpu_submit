#!/bin/bash

#! SLURM job script for Wilkes2 (Broadwell, ConnectX-4, P100)
#! Last updated: Mon 13 Nov 12:06:57 GMT 2017
#! https://docs.hpc.cam.ac.uk/hpc/user-guide/batch.html#sample-submission-scripts

#! Which project should be charged (NB Wilkes2 projects end in '-GPU'):
#SBATCH -A LEE-JR769-SL2-GPU

#! How many whole nodes should be allocated?
#SBATCH --nodes=1

#! Specify the number of GPUs per node (between 1 and 4; must be 4 if nodes>1).
#! Note: Charging is determined by GPU number * walltime.
#SBATCH --gres=gpu:1

#! How many (MPI) tasks will there be in total?
#! This should probably not exceed the total number of GPUs in use.
#SBATCH --ntasks=1

#! What types of email messages to receive. Valid values include
#! NONE, BEGIN, END, FAIL, REQUEUE, ALL. See https://slurm.schedmd.com/sbatch.html.
#SBATCH --mail-type=END,FAIL

#! The partition to use (do not change):
#SBATCH -p pascal

#! ------ sbatch directives end (put additional directives above this line)

#! Modify the settings below to specify the job's environment, location and launch method.
#! (SLURM reproduces the environment at submission irrespective of ~/.bashrc):
. /etc/profile.d/modules.sh                # Leave this line (enables the module command)
module purge                               # Removes all modules still loaded
module load rhel7/default-gpu              # REQUIRED - loads the basic environment

#! --- Single Job ---
#! sbatch -J job_name -t 1:0:0 --export CMD='python path/to/script.py --cli-arg 42' hpc/gpu_submit

# --- Array Job ---
#! sbatch -J job_name -t 1:0:0 --array 0-15 --export CMD="python path/to/script.py --cli-arg 42 --random-seed \$SLURM_ARRAY_TASK_ID" hpc/gpu_submit
#! or read the task id directly in the Python script via: task_id = int(sys.argv[1])

cd $SLURM_SUBMIT_DIR

echo -e "Job ID: $SLURM_JOB_ID\nJob name: $SLURM_JOB_NAME\n"
echo "Time: `date`"
echo "Running on master node: `hostname`"
echo "Current directory: `pwd`"
echo -e "\nNodes allocated: num_tasks=$SLURM_NTASKS, num_nodes=$SLURM_JOB_NUM_NODES"
echo -e "\nExecuting command:\n$CMD\n\n==================\n"

eval $CMD
